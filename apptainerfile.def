# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/engine/reference/builder/

# ARG PYTHON_VERSION=3.9.6
# FROM python:${PYTHON_VERSION}-slim as base

# BOOTSTRAP
Bootstrap: docker
From: nvidia/cuda:12.2.0-base-ubuntu22.04

# Prevents Python from writing pyc files.
%environment
    export PYTHONDONTWRITEBYTECODE=1
    export PYTHONUNBUFFERED=1

# Download dependencies as a separate step to take advantage of Dockers caching.
# Leverage a cache mount to /root/.cache/pip to speed up subsequent builds.
# Leverage a bind mount to requirements.txt to avoid having to copy them into
# into this layer.
%post
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        git \
        python3-pip \
        python3-dev \
        python3-opencv \
        libglib2.0-0 \
        nvidia-container-toolkit 
    python3 -m pip install --upgrade pip
	python3 -m pip cache purge
    python3 -m pip install --no-cache-dir numpy==1.26.3 \
	opencv-python \
	torch \
	torchvision \
	pybullet \
	open3d \
	matplotlib \
	tabulate \
	imutils \
	pycocotools \
	termcolor \
	Pillow \
	scikit-image \
	tensorboard \
	pyquaternion==0.9.9 \
	pyyaml==6.0 \
	pexpect==4.8.0 \
	einops \
	packaging \
	h5py \
	ipython \
	diffusers

# Copy the source code into the container.
#COPY . .

# Run the application.
#CMD python3 main.py --mode 'fcn' --dataset_dir 'save/ppg-dataset' --epochs 50
